@model IEnumerable<SimpleSocialMediaPlatform.Models.ChatMessage>

@{
    ViewData["Title"] = "Private Chat";
    var currentUserId = ViewData["CurrentUserId"]?.ToString() ?? "Unknown User";
    var chatWithUserId = ViewData["ChatWithUserId"]?.ToString() ?? "Unknown User";
    var chatWithUserName = ViewData["ChatWithUserName"]?.ToString() ?? "Unknown User";
}

<div class="container">
    <h2>Chat with @chatWithUserName</h2>
    <div id="chatContainer" class="border p-3 mb-3" style="height: 300px; overflow-y: scroll;">
        @foreach (var message in Model)
        {
            <div class="chat-message">
                <strong>@(message.FromUserId == currentUserId ? "You" : chatWithUserName):</strong> @message.Message
            </div>
        }
    </div>

    <div class="input-group mb-3">
        <input type="text" id="chatMessage" class="form-control" placeholder="Type a message" />
        <button class="btn btn-primary" type="button" id="sendMessage">Send</button>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            var chatContainer = document.getElementById("chatContainer");
            var chatMessage = document.getElementById("chatMessage");
            var sendMessage = document.getElementById("sendMessage");

            function appendMessage(message, sender) {
                var messageElement = document.createElement("div");
                messageElement.className = "chat-message";
                messageElement.textContent = sender + ": " + message;
                chatContainer.appendChild(messageElement);
                chatContainer.scrollTop = chatContainer.scrollHeight;
            }

            sendMessage.addEventListener("click", function () {
                var message = chatMessage.value.trim();
                if (message === "") return;

                appendMessage(message, "You");
                chatMessage.value = "";

                // Send message to server
                fetch('/api/chat', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        fromUserId: '@currentUserId',
                        toUserId: '@chatWithUserId',
                        message: message
                    })
                }).then(response => {
                    if (!response.ok) {
                        throw new Error('Network response was not ok.');
                    }
                }).catch(error => {
                    console.error('There was a problem with the fetch operation:', error);
                });
            });
        });
    </script>
}
