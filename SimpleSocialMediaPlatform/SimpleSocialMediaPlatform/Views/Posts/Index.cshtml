@model IEnumerable<SimpleSocialMediaPlatform.Models.UserPostCommentViewModel>



@{
    ViewData["Title"] = "Index";
}
<style>
   
</style>


<div class="container-p">
@*     <form asp-action="Search" asp-controller="Posts" method="get" class="form-inline">
        <input type="text" name="userName" class="form-control mb-2 mr-sm-2" placeholder="Search user name">
        <button type="submit" class="btn btn-primary mb-2">Search</button>
    </form> *@


    <!-- Modal Trigger Button (example) -->
    @* <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#postModal">
    Create Post
    </button> *@

    <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#postModal">
       @*  <i class="fa-solid fa-envelopes-bulk"></i> *@ Add Post
    </button>


    <!-- Modal Structure -->
    <div class="modal fade" id="postModal" tabindex="-1" aria-labelledby="postModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="postModalLabel">Create Post</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <!-- Your Form Starts Here -->
                    <form asp-action="Create" method="post" enctype="multipart/form-data">

                        <div class="mb-3">
                            <textarea id="Body" name="Body" class="form-control" placeholder="What's on your mind?" rows="3"></textarea>
                        </div>
                        <div class="mb-3">
                            @*  <label for="UserId" class="form-label">UserId</label> *@
                            <input type="hidden" id="UserId" name="UserId" value="@ViewData["UserID"]" class="form-control">
                            @* <p>User Id : @ViewData["UserID"]</p> *@
                        </div>

                        <div class="mb-3">
                            @* <label for="ImageFile" class="form-label btn btn-light">Upload Image</label> *@
                            <input type="file" id="PostImageFile" name="PostImageFile" class="form-control" accept="image/*">
                            <span id="image-upload-name"></span>
                        </div>

                        <div>
                            <input type="submit" value="Post" class="btn btn-primary">
                        </div>
                    </form>
                    <!-- Your Form Ends Here -->
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>



    <div class="container-p">
       @*  @if (Model != null && Model.Any()) *@
@* { *@
        @foreach (var item in Model)
        {
            <div class="post-container">
                <div class="post-header">
                    <!-- Display user profile picture or a default image -->
                    <img src="@(!string.IsNullOrWhiteSpace(item.UserInfoDetails.UserPostImage) ? "data:image/jpeg;base64," + item.UserInfoDetails.UserPostImage : "path/to/default/image.jpg")" alt="User Profile Picture" class="avatar rounded-circle" />

                    <div>
                        <strong>@Html.DisplayFor(modelItem => item.AppUsers.FullName)</strong>

                    </div>
                </div>

                @foreach (var p in item.UserPosts)
                {
                    <div class="post-time">@GetTimeAgo(p.CreateAt)
                            @if (p.UserId != null && ViewData["UserID"] != null && p.UserId == ViewData["UserID"].ToString())
                            {
                                <div class="post-actions">
                                    <a asp-action="Edit" asp-route-id="@p.Id" class="action-link"><i class="fa-solid fa-user-pen"></i></a>
                                    <a asp-action="Delete" asp-route-id="@p.Id" class="action-link"><i class="fa-solid fa-trash"></i></a>
                                </div>
                            }
                            
                    
                    </div>
                   
                    <div class="post-content">
                        <div class="post-body">@Html.DisplayFor(modelItem => p.Body)</div>
                        @if (!string.IsNullOrEmpty(p.PostImageName))
                        {
                            var fileExtension = System.IO.Path.GetExtension(p.PostImageName).ToLower();
                            if (fileExtension == ".jpg" || fileExtension == ".png" || fileExtension == ".jpeg" || fileExtension == ".*")
                            {
                                <img src="@Url.Content("~/Images/" + p.PostImageName)" alt="@p.PostImageName" class="post-image" />
                            }
                            
                            else
                            {
                                <div class="no-content">No image available.</div>
                            }
                        }
                        else
                        {
                            <div class="no-content">No image available.</div>
                        }
                    </div>

                   

                    <div class="comment-container" id="commentsList">
                        @foreach (var c in item.UserComments.Take(2))
                        {
                            <div class="comment-content">
                                <!-- User profile picture -->
                                <div class="comment-user">

                                    @if (!string.IsNullOrWhiteSpace(c.UserProfilePicture))
                                    {
                                        <img class="user-profile-pic" src="data:image/jpeg;base64,@c.UserProfilePicture" alt="User Profile Picture" />
                                    }
                                    else
                                    {
                                        <img class="user-profile-pic" src="path/to/default/image.jpg" alt="Default Profile Picture" />
                                    }
                                </div>

                                <!-- Comment details like body and attached images or PDFs -->
                                <div class="comment-details">
                                    <strong>@Html.DisplayFor(modelItem => c.UserName):</strong>
                                    <div class="comment-body">@Html.DisplayFor(modelItem => c.Body)</div>
                                    <!-- Display comment images or PDFs -->
                                    @if (!string.IsNullOrEmpty(c.ImageName))
                                    {
                                        var fileExtension = System.IO.Path.GetExtension(c.ImageName).ToLower();

                                        if (fileExtension == ".jpg" || fileExtension == ".png" || fileExtension == ".jpeg" || fileExtension == ".*")
                                        {
                                            <img src="@Url.Content("~/Images/" + c.ImageName)" alt="@c.ImageName" class="post-image" />
                                        }
                                        
                                        else
                                        {
                                            <div class="no-content">No image available.</div>
                                        }
                                    }
                                    else
                                    {
                                        <div>No image available.</div>
                                    }

                                </div>
                            </div>
                        }

                        @if (item.UserComments.Count > 2)
                        {
                            <div class="more-comments" id="more-comments-@p.Id" style="display:none;">
                                @foreach (var c in item.UserComments.Skip(2))
                                {
                                    <div class="comment-content">
                                        <!-- User profile picture -->
                                        <div class="comment-user">

                                            @if (!string.IsNullOrWhiteSpace(c.UserProfilePicture))
                                            {
                                                <img class="user-profile-pic" src="data:image/jpeg;base64,@c.UserProfilePicture" alt="User Profile Picture" />
                                            }
                                            else
                                            {
                                                <img class="user-profile-pic" src="path/to/default/image.jpg" alt="Default Profile Picture" />
                                            }
                                        </div>

                                        <!-- Comment details like body and attached images or PDFs -->
                                        <div class="comment-details">
                                            <strong>@Html.DisplayFor(modelItem => c.UserName):</strong>
                                            <div class="comment-body">@Html.DisplayFor(modelItem => c.Body)</div>
                                            <!-- Display comment images or PDFs -->
                                            @if (!string.IsNullOrEmpty(c.ImageName))
                                            {
                                                var fileExtension = System.IO.Path.GetExtension(c.ImageName).ToLower();

                                                if (fileExtension == ".jpg" || fileExtension == ".png" || fileExtension == ".jpeg" || fileExtension == ".*")
                                                {
                                                    <img src="@Url.Content("~/Images/" + c.ImageName)" alt="@c.ImageName" class="post-image" />
                                                }
                                                
                                                else
                                                {
                                                    <div class="no-content">No image available.</div>
                                                }
                                            }
                                            else
                                            {
                                                <div>No image available.</div>
                                            }

                                        </div>
                                    </div>
                                }
                            </div>
                            <button onclick="toggleComments('@p.Id')" class="btn btn-primary show-more">More</button>
                        }
                        <div class="total-comments">
                            <strong>Total Comments:</strong> @item.UserComments.Count
                        </div>
                        <!-- Comment submission form -->

                        <form id="commentForm" asp-controller="Comments" asp-action="CreateCommentForPost" method="post" enctype="multipart/form-data">
                            <input type="hidden" name="PostId" value="@p.Id" />
                            <input type="hidden" id="UserId" name="UserId" value="@ViewData["UserID"]" />
                            <div class="form-group">
                                <label for="Body">Comment</label>
                                <textarea name="Body" class="form-control"></textarea>

                                <div class="mb-3">
                                    <input type="file" id="ImageFile" name="ImageFile" class="form-control" accept="image/*">
                                    <span id="image-upload-name"></span>
                                </div>
                            </div>
                            <button type="submit" class="btn btn-primary">@* <i class="fa-regular fa-comment-dots"></i> *@Add Comment</button>
                        </form>

                    </div>
                   
                   
                }
            </div>
        }
      @*   }
        else
        {
            <p>No posts found.</p>
        } *@
    </div>


    @section Scripts {
        @{
            <script>
                document.addEventListener("DOMContentLoaded", function () {
                    // Assuming `container-p` is a parent element that exists when the page loads and contains all forms
                    var container = document.querySelector('.container-p');

                    container.addEventListener('submit', function (event) {
                        var target = event.target;
                        if (target && target.id === 'commentForm') {
                            event.preventDefault(); // Prevent the default form submission

                            var formData = new FormData(target);

                            fetch(target.action, {
                                method: target.method,
                                body: formData
                            })
                                .then(response => {
                                    if (response.ok) {
                                        return response.json(); // Assuming the server responds with JSON
                                    } else {
                                        throw new Error('Server responded with a status: ' + response.status);
                                    }
                                })
                                .then(data => {
                                    console.log('Success:', data);
                                    alert('Comment added successfully!');

                                    // Refresh the page after 2 seconds
                                    setTimeout(function () {
                                        window.location.reload();
                                    }, 1000);
                                })
                                .catch(error => {
                                    console.error('Error:', error);
                                    alert('Failed to add comment: ' + error.message);
                                });
                        }
                    });
                });
            </script>


            <script>

                document.getElementById('ImageFile').addEventListener('change', function () {
                    var fileName = this.files[0].name;
                    document.getElementById('image-upload-name').textContent = fileName;
                });

                function toggleUserIdVisibility() {
                    var userIdDiv = document.getElementById('userIdDiv'); // Add an ID to your div for this
                    userIdDiv.classList.toggle('d-none');
                }

                function toggleComments(postId) {
                    var commentsContainer = document.getElementById('more-comments-' + postId);
                    var button = document.querySelector('button[onclick="toggleComments(\'' + postId + '\')"]');
                    if (commentsContainer.style.display === "none") {
                        commentsContainer.style.display = "block";
                        button.textContent = "Less";
                    } else {
                        commentsContainer.style.display = "none";
                        button.textContent = "More";
                    }
                }

                @functions {
                public string GetTimeAgo(DateTime dateTime)
                {
                    var timeSpan = DateTime.Now.Subtract(dateTime);

                    if (timeSpan <= TimeSpan.FromSeconds(60))
                    {
                        return $"{timeSpan.Seconds} seconds ago";
                    }
                    else if (timeSpan <= TimeSpan.FromMinutes(60))
                    {
                        return timeSpan.Minutes > 1 ? $"{timeSpan.Minutes} minutes ago" : "a minute ago";
                    }
                    else if (timeSpan <= TimeSpan.FromHours(24))
                    {
                        return timeSpan.Hours > 1 ? $"{timeSpan.Hours} hours ago" : "an hour ago";
                    }
                    else if (timeSpan <= TimeSpan.FromDays(30))
                    {
                        return timeSpan.Days > 1 ? $"{timeSpan.Days} days ago" : "yesterday";
                    }
                    else if (timeSpan <= TimeSpan.FromDays(365))
                    {
                        int months = (int)(timeSpan.Days / 30);
                        return months > 1 ? $"{months} months ago" : "a month ago";
                    }
                    else
                    {
                        int years = (int)(timeSpan.Days / 365);
                        return years > 1 ? $"{years} years ago" : "a year ago";
                    }
                }
            }

        </script>



            await Html.RenderPartialAsync("_ValidationScriptsPartial");
        }
    }
